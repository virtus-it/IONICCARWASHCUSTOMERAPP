{"version":3,"sources":["../../src/pages/autocomplete/Autocomplete.module.ts","../../src/pages/autocomplete/Autocomplete.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;AAAuC;AACO;AACE;AAWhD;IAAA;IACA,CAAC;IADY,kBAAkB;QAR9B,+DAAQ,CAAC;YACR,YAAY,EAAE;gBACZ,uEAAgB;aACjB;YACD,OAAO,EAAE;gBACP,sEAAe,CAAC,QAAQ,CAAC,uEAAgB,CAAC;aAC3C;SACF,CAAC;OACW,kBAAkB,CAC9B;IAAD,yBAAC;CAAA;AAD8B;;;;;;;;;;;;;;;;;;;;;;ACbmB;AACH;AAEE;AASjD;IAME,0BAAmB,QAAwB,EAAU,IAAY,EAAU,UAAiB;QAAzE,aAAQ,GAAR,QAAQ,CAAgB;QAAU,SAAI,GAAJ,IAAI,CAAQ;QAAU,eAAU,GAAV,UAAU,CAAO;QAF5F,YAAO,GAAG,IAAI,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,mBAAmB,EAAE,CAAC;QAGrD,IAAI,CAAC,iBAAiB,GAAG,EAAE,CAAC;QAC5B,IAAI,CAAC,YAAY,GAAG;YAClB,KAAK,EAAE,EAAE;SACV,CAAC;IACJ,CAAC;IAED,kCAAO,GAAP;QACE,IAAI,CAAC,QAAQ,CAAC,OAAO,EAAE,CAAC;IAC1B,CAAC;IAED,qCAAU,GAAV,UAAW,IAAS;QAClB,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;QAC5B,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC;IAClB,CAAC;IAGD,uCAAY,GAAZ;QACE,IAAI,CAAC;YACH,EAAE,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,KAAK,IAAI,EAAE,CAAC,CAAC,CAAC;gBAClC,IAAI,CAAC,iBAAiB,GAAG,EAAE,CAAC;gBAC5B,MAAM,CAAC;YACT,CAAC;YACD,IAAI,IAAE,GAAG,IAAI,CAAC;YACd,IAAI,CAAC,OAAO,CAAC,mBAAmB,CAAC;gBAC/B,KAAK,EAAE,IAAI,CAAC,YAAY,CAAC,KAAK;gBAC9B,qBAAqB,EAAE,EAAE,OAAO,EAAE,CAAC,IAAI,EAAC,IAAI,CAAC,EAAE;aAChD,EAAE,UAAU,WAAW,EAAE,MAAM;gBAC9B,EAAE,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC;oBAChB,IAAE,CAAC,iBAAiB,GAAG,EAAE,CAAC;oBAC1B,IAAE,CAAC,IAAI,CAAC,GAAG,CAAC;wBACV,WAAW,CAAC,OAAO,CAAC,UAAU,UAAU;4BACtC,IAAE,CAAC,iBAAiB,CAAC,IAAI,CAAC,UAAU,CAAC,WAAW,CAAC,CAAC;wBACpD,CAAC,CAAC,CAAC;oBACL,CAAC,CAAC,CAAC;gBACL,CAAC;YACH,CAAC,CAAC,CAAC;QACL,CAAC;QAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YACX,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC,CAAC,QAAQ,EAAE,CAAC,CAAC;QACxC,CAAC;IACH,CAAC;IA9CU,gBAAgB;QAJ5B,gEAAS,CAAC;WACuB;SACjC,CAAC;yBAQ4F;OANjF,gBAAgB,CA+C5B;IAAD,CAAC;AAAA;SA/CY,gBAAgB,e","file":"15.js","sourcesContent":["import {NgModule} from \"@angular/core\";\nimport {IonicPageModule} from \"ionic-angular\";\nimport {AutocompletePage} from \"./Autocomplete\";\n\n\n@NgModule({\n  declarations: [\n    AutocompletePage\n  ],\n  imports: [\n    IonicPageModule.forChild(AutocompletePage)\n  ],\n})\nexport class AutocompleteModule {\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/autocomplete/Autocomplete.module.ts","import { Component, NgZone } from \"@angular/core\";\nimport { ViewController, IonicPage } from \"ionic-angular\";\nimport { googlemaps } from \"googlemaps\";\nimport { Utils } from \"../../app/services/Utils\";\n\ndeclare var google;\n\n@IonicPage()\n@Component({\n  templateUrl: 'AutoComplete.html'\n})\n\nexport class AutocompletePage {\n  autocompleteItems;\n  autocomplete;\n  geo: any;\n  service = new google.maps.places.AutocompleteService();\n\n  constructor(public viewCtrl: ViewController, private zone: NgZone, private alertUtils: Utils) {\n    this.autocompleteItems = [];\n    this.autocomplete = {\n      query: ''\n    };\n  }\n\n  dismiss() {\n    this.viewCtrl.dismiss();\n  }\n\n  chooseItem(item: any) {\n    this.viewCtrl.dismiss(item);\n    this.geo = item;\n  }\n\n\n  updateSearch() {\n    try {\n      if (this.autocomplete.query == '') {\n        this.autocompleteItems = [];\n        return;\n      }\n      let me = this;\n      this.service.getPlacePredictions({\n        input: this.autocomplete.query,\n        componentRestrictions: { country: [\"AE\",\"IN\"] }\n      }, function (predictions, status) {\n        if (predictions) {\n          me.autocompleteItems = [];\n          me.zone.run(function () {\n            predictions.forEach(function (prediction) {\n              me.autocompleteItems.push(prediction.description);\n            });\n          });\n        }\n      });\n    } catch (e) {\n      this.alertUtils.showLog(e.toString());\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/autocomplete/Autocomplete.ts"],"sourceRoot":""}